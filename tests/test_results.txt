=== Go Release Tour レッスンファイル一括テスト開始 ===
開始時刻: Sat Sep 20 19:29:53 JST 2025

=== Go 1.25 のテスト ===
テストファイル数:        7
  テスト中: 05_experimental_gc.go ... ✅ 成功
    出力:
      === 実験的ガベージコレクター (Green Tea GC) Demo ===
      Go version: go1.25.1
      GC実行回数: 0
  テスト中: 04_go_mod_ignore.go ... ✅ 成功
    出力:
      === go.mod ignore ディレクティブ Demo ===
      Go 1.25で追加されたgo.modのignoreディレクティブ
      
  テスト中: 06_json_v2.go ... ✅ 成功
    出力:
      === encoding/json/v2 パッケージ Demo ===
      Go 1.25で追加された改良版JSONパッケージ
      注意: この機能は実際のGo 1.25環境でのみ利用可能です
  テスト中: 02_trace_flight_recorder.go ... ✅ 成功
    出力:
      === Trace Flight Recorder Demo ===
      Go 1.25のTrace Flight Recorder機能をデモンストレーション
      注意: この機能は実際のGo 1.25環境でのみ利用可能です
  テスト中: 03_testing_synctest.go ... ✅ 成功
    出力:
      === testing/synctest Package Demo ===
      Go 1.25で追加された並行処理テスト支援パッケージ
      注意: この機能は実際のGo 1.25環境でのみ利用可能です
  テスト中: 01_container_aware_gomaxprocs.go ... ✅ 成功
    出力:
      === Container-aware GOMAXPROCS Demo ===
      現在のGOMAXPROCS: 8
      システムのCPU数: 8
  テスト中: 07_go_doc_http.go ... ✅ 成功
    出力:
      === go doc -http オプション Demo ===
      Go 1.25で追加されたgo docの新しい-httpオプション
      

=== Go 1.24 のテスト ===
テストファイル数:        7
  テスト中: 07_weak_pointers.go ... ✅ 成功
    出力:
      === weak Package Demo ===
      
      --- 弱参照について ---
  テスト中: 01_generic_type_aliases.go ... ✅ 成功
    出力:
      === Generic Type Aliases Demo ===
      Numbers: [1 2 3 4 5]
      Strings: [hello world go 1.24]
  テスト中: 05_os_root.go ... ✅ 成功
    出力:
      === os.Root Type Demo ===
      Current directory: /Users/kanehiroyuu/Documents/GitHub/go-release-tour
      
  テスト中: 06_crypto_mlkem.go ... ✅ 成功
    出力:
      === crypto/mlkem Package Demo ===
      --- MLKEM (Module-Lattice-Based KEM) について ---
      ✅ 耐量子暗号: 量子コンピューターに対して安全
  テスト中: 04_testing_loop.go ... ✅ 成功
    出力:
      === testing.B.Loop() Demo ===
      注意: testing.B.Loop()はGo 1.24の新機能です
      現在は概念的なデモを実行し、実際の使用例を示します
  テスト中: 03_swiss_tables_maps.go ... ✅ 成功
    出力:
      === Swiss Tables Map Performance Demo ===
      注意: Swiss Tables実装はGo 1.24の内部変更で、ユーザーコードは変更不要
      以下は通常のmap操作ですが、Go 1.24では自動的に高速化されます
  テスト中: 02_tool_dependencies.go ... ✅ 成功
    出力:
      === Tool Dependencies Demo ===
      go.modファイルでのツール依存関係の例:
      

=== Go 1.23 のテスト ===
テストファイル数:        6
  テスト中: 01_structured_logging.go ... ✅ 成功
    出力:
      === Structured Logging Demo ===
      注意: これはlog/slogの概念例です。実際の環境では標準logパッケージを使用します。
      {
  テスト中: 03_timer_reset.go ... ✅ 成功
    出力:
      === Timer.Reset Behavior Change Demo ===
      
      --- Go 1.23以前の問題（現在は修正済み） ---
  テスト中: 04_slices_concat.go ... ✅ 成功
    出力:
      === slices.Concat Function Demo ===
      注意: この例はslices.Concatの概念を示すもので、実際の環境では互換性のある実装を使用しています。
      
  テスト中: 06_maps_collect.go ... ✅ 成功
    出力:
      === maps.Collect Function Demo ===
      注意: この例はmaps.Collectの概念を示すもので、実際の環境では互換性のある実装を使用しています。
      
  テスト中: 02_iterators.go ... ✅ 成功
    出力:
      === Range over Function Types Demo ===
      注意: これはイテレーターの概念例です。実際の環境では従来の反復処理を使用します。
      
  テスト中: 05_cmp_or.go ... ✅ 成功
    出力:
      === cmp.Or Function Demo ===
      注意: この例はcmp.Orの概念を示すもので、実際の環境では互換性のある実装を使用しています。
      

=== Go 1.22 のテスト ===
テストファイル数:        5
  テスト中: 03_math_rand_v2.go ... ✅ 成功
    出力:
      === math/rand/v2 Package Demo ===
      
      --- 基本的な使用例 ---
  テスト中: 01_for_range_integers.go ... ✅ 成功
    出力:
      === For-Range over Integers Demo ===
      1から5までの数値:
        0
  テスト中: 04_slices_concat.go ... ✅ 成功
    出力:
      === slices Package Enhancements Demo ===
      
      --- 基本的な操作 ---
  テスト中: 05_enhanced_http_routing.go ... ✅ 成功
    出力:
      === Enhanced HTTP Routing Demo ===
      
      --- ルーティングテスト ---
  テスト中: 02_loop_variables.go ... ✅ 成功
    出力:
      === Enhanced Loop Variables Demo ===
      
      --- Go 1.22以前の問題（現在は修正済み） ---

=== Go 1.21 のテスト ===
テストファイル数:        3
  テスト中: 03_maps_package.go ... ✅ 成功
    出力:
      === maps Package Demo ===
      元のマップ: map[a:1 b:2 c:3]
      複製: map[a:1 b:2 c:3]
  テスト中: 02_slices_package.go ... ✅ 成功
    出力:
      === slices Package Demo ===
      元のスライス: [3 1 4 1 5 9 2 6]
      ソート後: [1 1 2 3 4 5 6 9]
  テスト中: 01_built_in_functions.go ... ✅ 成功
    出力:
      === Built-in Functions Demo ===
      --- min関数 ---
      min(3, 1, 4): 1

=== Go 1.20 のテスト ===
テストファイル数:        3
  テスト中: 03_errors_join.go ... ✅ 成功
    出力:
      === errors.Join Function Demo ===
      
      --- 基本的な使用例 ---
  テスト中: 02_slice_to_array_conversion.go ... ✅ 成功
    出力:
      === Slice to Array Conversion Demo ===
      元のスライス: [1 2 3 4 5 6] (長さ: 6)
      
  テスト中: 01_comparable_types.go ... ✅ 成功
    出力:
      === Comparable Types Demo ===
      重複除去: [1 2 3 2 1] → [1 2 3]
      重複除去: [apple banana apple cherry] → [apple banana cherry]

=== Go 1.19 のテスト ===
テストファイル数:        2
  テスト中: 02_atomic_types.go ... ✅ 成功
    出力:
      === New Atomic Types Demo ===
      
      --- 基本的なアトミック型 ---
  テスト中: 01_memory_arenas.go ... ✅ 成功
    出力:
      === Memory Arenas Demo ===
      Go 1.19のメモリアリーナ（実験的）:
        - 大量の短命オブジェクトの効率的管理

=== Go 1.18 のテスト ===
テストファイル数:        2
  テスト中: 01_generics.go ... ✅ 成功
    出力:
      === Generics Demo ===
      --- ジェネリック関数 ---
      Max(10, 20): 20
  テスト中: 02_workspace_mode.go ... ✅ 成功
    出力:
      === Workspace Mode Demo ===
      
      --- ワークスペースモードとは ---

=== テスト結果サマリー ===
総ファイル数: 35
成功: 35
エラー: 0
成功率: 100.0%

終了時刻: Sat Sep 20 19:30:04 JST 2025
